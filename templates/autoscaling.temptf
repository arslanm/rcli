// Created by RCLI - {{.DateTime}}

data "template_file" "rcliTemplateFile" {
  template = <<EOF
    #!/bin/bash -xe

    amazon-linux-extras install -y nginx1
    systemctl enable nginx
    systemctl start nginx
    sleep 10
    /usr/bin/awk  '/properly/{print;print system("hostname -f");next}1' /usr/share/nginx/html/index.html > /tmp/ud.txt && mv -f /tmp/ud.txt /usr/share/nginx/html/index.html
  EOF
}

resource "aws_launch_template" "rcliLT" {
  name = "rcliLT"
  image_id = data.aws_ami.rcliAmi.id
  instance_type = var.instance_type
  key_name = var.key_name
  user_data = base64encode(data.template_file.rcliTemplateFile.rendered)
  vpc_security_group_ids = [data.aws_security_group.rcli_sg.id]

  tag_specifications {
    resource_type = "instance"
    tags = {
      Creator = "Rcli"
    }
  }

  depends_on = [ data.aws_security_group.rcli_sg, data.aws_ami.rcliAmi, data.template_file.rcliTemplateFile ]
}

resource "aws_autoscaling_group" "rcli_as" {
    min_size = var.auto_scale_min_size
    max_size = var.auto_scale_max_size
    desired_capacity  = var.auto_scale_min_size

    launch_template {
        id = data.aws_launch_template.rcliLT.id
        version = "$Latest"
    }
    health_check_grace_period = 30
    vpc_zone_identifier = data.aws_subnet_ids.rcli_subnets.ids  
    target_group_arns = [ aws_alb_target_group.rcliTG.arn ]
    
    lifecycle {
        create_before_destroy = true
    }
    depends_on = [data.aws_launch_template.rcliLT, aws_alb_target_group.rcliTG, data.aws_subnet_ids.rcli_subnets ]
}

resource "aws_autoscaling_attachment" "rcliTGAttachement" {
  autoscaling_group_name = aws_autoscaling_group.rcli_as.id
  alb_target_group_arn   = aws_alb_target_group.rcliTG.arn
  depends_on = [aws_autoscaling_group.rcli_as, aws_alb_target_group.rcliTG]
}